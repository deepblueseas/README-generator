// we get license from the answers collected in the prompts in the index.js
function renderLicenseBadge(license) {
  // if the user did not choose anything here, which is an option in the prompts, then nothing will be generated by the mkdown
  if (!license) {
    return '';
  }
  // i added a link to shield.io in the readme, but this URL comes from their website. you can choose a number of colors!
  // the backticks will always be the same, but the template literal will be dynamically created depending on the user's input
  return `![License](https://img.shields.io/badge/License-${license}-violet)`;
}

// this created the license link in the table of contents
function renderLicenseLink(license) {
  if (!license) {
    return '';
  }
  return `[License](#license)`;
}

// return the license section of README
function renderLicenseSection(license, title) {
  if (!license || license === 'None') {
    return '';
  }
  return `## License

  This project, ${title}, is licensed under the ${license} License. See [LICENSE](LICENSE) for more information.`;
}

// it is kind of hard for me to conceptualize, but you can pass in data or answers here and it will run
// data is a parameter of the objct (answers) that we collected with the prompt
// i prefer calling it answers because it makes more sense, but data.title works the same
function generateMarkdown(answers) {
  return `# ${answers.title}

  ${renderLicenseBadge(answers.license)}

  ## Description

  ${answers.description}

  ## Table of Contents
  I. [Installation](#installation)
  II. [Contribution Guidelines](#contribution-guidelines)
  III. [Test Instructions](#test-instructions)
  IV. ${renderLicenseLink(answers.license)}
  V. [Contact Information](#contact-information)

  ## Installation

  ${answers.installation}

  ## Contribution Guidelines

  ${answers.contribution}

  ## Test Instructions

  ${answers.tests}

  ## License

  ${renderLicenseSection(answers.license, answers.title)}

  ## Contact Information

  >GitHub: [${answers.github}](https://github.com/${answers.github})
  >Email: ${answers.email}

`;
}

module.exports = generateMarkdown;